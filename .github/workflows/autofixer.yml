on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * 2"

jobs:
  autofix:
    runs-on: ubuntu-latest

    steps:
      - name: Install Racket
        uses: Bogdanp/setup-racket@v1.11
        with:
          version: current
      
      - name: Save Racket version
        run: racket --version > .racket-version

      - name: Cache Racket dependencies
        uses: actions/cache@v4.2.0
        with:
          path: |
            ~/.cache/racket
            ~/.local/share/racket
          key: ${{ runner.os }}-racket-current-${{ hashFiles('.racket-version') }}

      - name: Install Resyntax
        run: raco pkg install --auto --skip-installed resyntax

      - name: Check Resyntax is installed
        run: racket -l- resyntax/cli --help

      - name: Generate a token
        id: generate-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: 999945
          private-key: ${{ secrets.RESYNTAX_APP_PRIVATE_KEY }}
          owner: jackfirth

      - name: Get GitHub App User ID
        id: get-user-id
        run: echo "user-id=$(gh api "/users/${{ steps.generate-token.outputs.app-slug }}[bot]" --jq .id)" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ steps.generate-token.outputs.token }}

      - name: Install target package
        run: raco pkg install --auto --no-setup compose-app

      - name: Clone target package
        run: raco pkg update --clone cloned-package compose-app

      - name: Configure token-based access to cloned package's repository
        working-directory: cloned-package
        run: git remote set-url origin "https://x-access-token:${{ steps.generate-token.outputs.token }}@github.com/jackfirth/compose-app.git"

      - name: Configure Git username
        working-directory: cloned-package
        run: git config user.name "${{ steps.generate-token.outputs.app-slug }}[bot]"

      - name: Configure Git email
        working-directory: cloned-package
        run: git config user.email "${{ steps.get-user-id.outputs.user-id }}+${{ steps.generate-token.outputs.app-slug }}[bot]@users.noreply.github.com"

      - name: Create branch in cloned package repository
        working-directory: cloned-package
        run: git checkout -b autofix-${{ github.run_number }}-${{ github.run_attempt }}

      - name: Run Resyntax
        working-directory: cloned-package
        run: |
          racket -l- resyntax/cli fix \
            --package compose-app \
            --max-fixes 20 \
            --max-modified-files 10 \
            --max-modified-lines 300 \
            --max-pass-count 10 \
            --output-as-commit-message \
            --create-multiple-commits \
            >> /tmp/resyntax-output.txt

      - name: Push fixes to remote branch
        uses: actions/github-script@v7.0.1
        with:
          github-token: ${{ steps.generate-token.outputs.token }}
          script: |
            await exec.exec(
              'git push --set-upstream origin autofix-${{ github.run_number }}-${{ github.run_attempt }}',
              [],
              {cwd: 'cloned-package'});

      - name: Create pull request
        uses: actions/github-script@v7.0.1
        with:
          github-token: ${{ steps.generate-token.outputs.token }}
          script: |
            const { readFile, writeFile } = require('fs/promises');
            const commitMessageBody = await readFile('/tmp/resyntax-output.txt', { encoding: 'utf8' });
            const targetRepo = await github.rest.repos.get({owner: "jackfirth", repo: "compose-app"});
            const base = ('default_branch' in targetRepo) ? targetRepo.default_branch : "master";
            await github.rest.pulls.create({
              owner: "jackfirth",
              repo: "compose-app",
              title: "Automated Resyntax fixes",
              head: "autofix-${{ github.run_number }}-${{ github.run_attempt }}",
              base: targetRepo.default_branch,
              body: commitMessageBody,
              maintainer_can_modify: true,
            });
